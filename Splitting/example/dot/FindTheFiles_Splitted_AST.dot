digraph FindTheFiles_AST {
  // graph-vertices
  n1  [label="ROOT: FindTheFiles.java"];
  n2  [label="METHOD_SIGNATURWE"];
  n3  [label="METHOD_BODY"];
  n4  [label="STATEMENTS_BLOCK"];
  n5  [label="IF"];
  n6  [label="METHOD_SIGNATURWE"];
  n7  [label="MODIFIER: public"];
  n8  [label="RETURN: void"];
  n9  [label="NAME: FindTheFilesInPath"];
  n10  [label="PARAMS"];
  n11  [label="VAR"];
  n12  [label="TYPE: String"];
  n13  [label="NAME: path"];
  n14  [label="VAR"];
  n15  [label="STATEMENTS_BLOCK"];
  n16  [label="TYPE: File"];
  n17  [label="NAME: dir"];
  n18  [label="INIT:  =  new File ( path ) "];
  n19  [label="VAR"];
  n20  [label="TYPE: String[]"];
  n21  [label="NAME: children"];
  n22  [label="INIT:  =  dir . list ( ) "];
  n23  [label="NESTED_FOR"];
  n24  [label="INIT"];
  n25  [label="VAR"];
  n26  [label="TYPE: int"];
  n27  [label="NAME: i"];
  n28  [label="INIT:  =  0 "];
  n29  [label="COND:  i < children . length "];
  n30  [label="UPDATE"];
  n31  [label=" i ++ "];
  n32  [label="BLOCK"];
  n33  [label="VAR"];
  n34  [label="TYPE: String"];
  n35  [label="NAME: filename"];
  n36  [label="INIT:  =  children [ i ] "];
  n37  [label=" System . out . println ( filename ) "];
  n38  [label="IF"];
  n39  [label="COND:  children == null "];
  n40  [label="BLOCK"];
  n41  [label=" System . out . println ( 'No such dir' ) "];
  n42  [label="ELSE"];
  n43  [label="BLOCK"];
  n44  [label="NESTED_FOR"];
  // graph-edges
  n1 -> n2;
  n2 -> n3;
  n3 -> n4;
  n3 -> n5;
  n6 -> n7;
  n6 -> n8;
  n6 -> n9;
  n6 -> n10;
  n10 -> n11;
  n11 -> n12;
  n11 -> n13;
  n15 -> n14;
  n14 -> n16;
  n14 -> n17;
  n14 -> n18;
  n15 -> n19;
  n19 -> n20;
  n19 -> n21;
  n19 -> n22;
  n23 -> n24;
  n24 -> n25;
  n25 -> n26;
  n25 -> n27;
  n25 -> n28;
  n23 -> n29;
  n23 -> n30;
  n30 -> n31;
  n23 -> n32;
  n32 -> n33;
  n33 -> n34;
  n33 -> n35;
  n33 -> n36;
  n32 -> n37;
  n38 -> n39;
  n38 -> n40;
  n40 -> n41;
  n38 -> n42;
  n42 -> n43;
  n43 -> n44;
  // end-of-graph
}
