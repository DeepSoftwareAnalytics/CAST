digraph FindTheFiles_AST {
  // graph-vertices
  n1  [label="ROOT"];
  n5  [label="METHOD"];
  n6  [label="MODIFIER: public"];
  n7  [label="RETURN: void"];
  n8  [label="NAME: FindTheFilesInPath"];
  n9  [label="PARAMS"];
  n10  [label="VAR"];
  n11  [label="TYPE: String"];
  n12  [label="NAME: path"];
  n13  [label="BLOCK"];
  n14  [label="VAR"];
  n15  [label="TYPE: File"];
  n16  [label="NAME: dir"];
  n17  [label="INIT: = new File(path)"];
  n18  [label="VAR"];
  n19  [label="TYPE: String[]"];
  n20  [label="NAME: children"];
  n21  [label="INIT: = dir.list()"];
  n22  [label="IF"];
  n23  [label="COND: children == null"];
  n24  [label="BLOCK"];
  n25  [label="5:  System.out.println('Dir does not exist')"];
  n26  [label="ELSE"];
  n27  [label="FOR"];
  n28  [label="INIT"];
  n29  [label="VAR"];
  n30  [label="TYPE: int"];
  n31  [label="NAME: i"];
  n32  [label="INIT: = 0"];
  n33  [label="COND: i < children.length"];
  n34  [label="UPDATE"];
  n35  [label="8:  i++"];
  n36  [label="BLOCK"];
  n37  [label="VAR"];
  n38  [label="TYPE: String"];
  n39  [label="NAME: filename"];
  n40  [label="INIT: = children[i]"];
  n41  [label="10:  System.out.println(filename)"];
  // graph-edges
  n1 -> n5;
  n5 -> n6;
  n5 -> n7;
  n5 -> n8;
  n5 -> n9;
  n9 -> n10;
  n10 -> n11;
  n10 -> n12;
  n5 -> n13;
  n13 -> n14;
  n14 -> n15;
  n14 -> n16;
  n14 -> n17;
  n13 -> n18;
  n18 -> n19;
  n18 -> n20;
  n18 -> n21;
  n13 -> n22;
  n22 -> n23;
  n22 -> n24;
  n24 -> n25;
  n22 -> n26;
  n26 -> n27;
  n27 -> n28;
  n28 -> n29;
  n29 -> n30;
  n29 -> n31;
  n29 -> n32;
  n27 -> n33;
  n27 -> n34;
  n34 -> n35;
  n27 -> n36;
  n36 -> n37;
  n37 -> n38;
  n37 -> n39;
  n37 -> n40;
  n36 -> n41;
  // end-of-graph
}
